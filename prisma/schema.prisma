// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  password  String
  createdAt DateTime @default(now())
  roleId    Int
  role      UserRole @relation(fields: [roleId], references: [id])

  Voucher Voucher[]
}

model UserRole {
  id           Int    @id @default(autoincrement())
  userRoleName String

  User User[]
}

model Package {
  id           Int    @id @default(autoincrement())
  packageName  String
  packagePrice Int

  PackageMenu PackageMenu[]
  Voucher     Voucher[]
}

model Menu {
  id              Int      @id @default(autoincrement())
  menuName        String
  menuPhoto       String
  menuDescription String   @db.VarChar(400)
  menuPrice       Int
  categoryId      Int
  category        Category @relation(fields: [categoryId], references: [id])

  PackageMenu PackageMenu[]
  VoucherMenu VoucherMenu[]
}

model Category {
  id           Int    @id @default(autoincrement())
  categoryName String @db.VarChar(400)

  Menu Menu[]
}

model PackageMenu {
  id        Int      @id @default(autoincrement())
  package   Package  @relation(fields: [packageId], references: [id])
  packageId Int
  menu      Menu     @relation(fields: [menuId], references: [id])
  menuId    Int
  createdAt DateTime @default(now())
}

model Table {
  id        Int     @id @default(autoincrement())
  tableNo   Int     @unique
  tableName String?
  isActive  Boolean @default(false)

  TableVoucher TableVoucher[]
}

model TableVoucher {
  id       Int     @id @default(autoincrement())
  isActive Boolean @default(true)

  Table   Table? @relation(fields: [tableId], references: [id])
  tableId Int?

  Voucher   Voucher? @relation(fields: [voucherId], references: [id])
  voucherId Int?
}

model Voucher {
  id          Int      @id @default(autoincrement())
  isActive    Boolean  @default(true)
  personCount Int
  token       String   @unique
  totalBills  Decimal  @default(0)
  issueDate   DateTime @default(now())

  package   Package @relation(fields: [packageId], references: [id])
  packageId Int

  user      User @relation(fields: [createdBy], references: [id])
  createdBy Int

  VoucherMenu  VoucherMenu[]
  TableVoucher TableVoucher[]
}

model VoucherMenu {
  id        Int     @id @default(autoincrement())
  isDone    Boolean @default(false)
  quantity  Int
  menuPrice Int // ATM menu price which means (price that time)

  voucher   Voucher @relation(fields: [voucherId], references: [id])
  voucherId Int

  menu   Menu @relation(fields: [menuId], references: [id])
  menuId Int
}
